use serde::{Deserialize, Serialize};

/// A Rust funtion with its file source, attributes, and raw function content.
#[derive(Debug, Serialize, Deserialize)]
pub struct SerFunction {
    pub hash: String,
    /// DefId in stable_mir.
    pub def_id: String,
    /// Every funtion must be declared in a specific file, even for those
    /// generated by macros.
    pub file: String,
    /// Attributes are attached the function, but it seems that attributes
    /// and function must be separated to query.
    pub attrs: Vec<String>,
    /// Raw function string, including name, signature, and body.
    pub func: String,
    /// Recursive fnction calls inside the body.
    pub callees: Vec<Callee>,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct Callee {
    pub def_id: String,
    pub file: String,
    pub func: String,
}
