[
  {
    "hash": "407797103376261238612495655534918835712",
    "attrs": [
      "#[kanitool::proof]"
    ],
    "name": "verify::recursive_callees",
    "file": "tests/proofs/standard_proofs.rs",
    "callees_len": 107,
    "callees": [
      "<std::option::Option<&u8> as std::ops::Try>::branch",
      "<std::option::Option<u32> as std::ops::FromResidual<std::option::Option<std::convert::Infallible>>>::from_residual",
      "<std::ptr::NonNull<u8> as std::cmp::PartialEq>::eq",
      "<std::slice::Iter<'_, u8> as std::iter::DoubleEndedIterator>::next_back",
      "<std::slice::Iter<'_, u8> as std::iter::ExactSizeIterator>::len",
      "<std::slice::Iter<'_, u8> as std::iter::Iterator>::next",
      "<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back",
      "<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}",
      "<std::str::CharIndices<'_> as std::iter::Iterator>::next",
      "<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back",
      "<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}",
      "<std::str::Chars<'_> as std::iter::Iterator>::next",
      "<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}",
      "<std::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::ReverseSearcher<'_>>::next_reject_back",
      "<std::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::Searcher<'_>>::next_reject",
      "<std::str::pattern::MultiCharEqPattern<{closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::Pattern>::into_searcher",
      "<std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::ReverseSearcher<'_>>::next_back",
      "<std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::ReverseSearcher<'_>>::next_reject_back",
      "<std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::Searcher<'_>>::next",
      "<std::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}> as std::str::pattern::Searcher<'_>>::next_reject",
      "<{closure@core::str::<impl str>::trim::{closure#0}} as std::str::pattern::MultiCharEq>::matches",
      "<{closure@core::str::<impl str>::trim::{closure#0}} as std::str::pattern::Pattern>::into_searcher",
      "core::num::<impl isize>::overflowing_neg",
      "core::num::<impl isize>::unchecked_neg",
      "core::num::<impl isize>::unchecked_neg::precondition_check",
      "core::num::<impl u32>::wrapping_sub",
      "core::num::<impl usize>::overflowing_sub",
      "core::num::<impl usize>::unchecked_sub",
      "core::num::<impl usize>::unchecked_sub::precondition_check",
      "core::panic::panic_info::PanicInfo::<'_>::new",
      "core::panicking::panic",
      "core::panicking::panic_nounwind",
      "core::panicking::panic_nounwind_fmt",
      "core::panicking::panic_nounwind_fmt::runtime",
      "core::slice::<impl [u8]>::iter",
      "core::str::<impl str>::as_bytes",
      "core::str::<impl str>::char_indices",
      "core::str::<impl str>::chars",
      "core::str::<impl str>::get_unchecked::<std::ops::Range<usize>>",
      "core::str::<impl str>::trim",
      "core::str::<impl str>::trim::{closure#0}",
      "core::str::<impl str>::trim_matches::<{closure@core::str::<impl str>::trim::{closure#0}}>",
      "core::str::traits::<impl std::slice::SliceIndex<str> for std::ops::Range<usize>>::get_unchecked",
      "core::str::traits::<impl std::slice::SliceIndex<str> for std::ops::Range<usize>>::get_unchecked::precondition_check",
      "core::str::validations::next_code_point::<'_, std::slice::Iter<'_, u8>>",
      "core::str::validations::next_code_point_reverse::<'_, std::slice::Iter<'_, u8>>",
      "core::str::validations::utf8_acc_cont_byte",
      "core::str::validations::utf8_first_byte",
      "core::str::validations::utf8_is_cont_byte",
      "core::ub_checks::check_language_ub",
      "core::ub_checks::check_language_ub::runtime",
      "core::unicode::unicode_data::white_space::lookup",
      "m::func1",
      "std::char::convert::char_try_from_u32",
      "std::char::convert::from_u32_unchecked",
      "std::char::convert::from_u32_unchecked::precondition_check",
      "std::char::methods::<impl char>::from_u32_unchecked",
      "std::char::methods::<impl char>::is_whitespace",
      "std::fmt::Arguments::<'_>::new_const::<1>",
      "std::hint::unreachable_unchecked",
      "std::hint::unreachable_unchecked::precondition_check",
      "std::intrinsics::cold_path",
      "std::intrinsics::unlikely",
      "std::mem::size_of::<u8>",
      "std::option::Option::<&u8>::unwrap_unchecked",
      "std::option::Option::<char>::map::<(usize, char), {closure@<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}>",
      "std::option::Option::<u32>::map::<char, {closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}>",
      "std::option::Option::<u32>::map::<char, {closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}}>",
      "std::panic::Location::<'_>::caller",
      "std::ptr::NonNull::<[u8]>::as_ptr",
      "std::ptr::NonNull::<[u8]>::cast::<u8>",
      "std::ptr::NonNull::<[u8]>::from_ref",
      "std::ptr::NonNull::<u8>::add",
      "std::ptr::NonNull::<u8>::as_ptr",
      "std::ptr::NonNull::<u8>::as_ref::<'_>",
      "std::ptr::NonNull::<u8>::offset",
      "std::ptr::NonNull::<u8>::offset_from_unsigned",
      "std::ptr::NonNull::<u8>::sub",
      "std::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check",
      "std::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge",
      "std::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge::runtime",
      "std::ptr::const_ptr::<impl *const [u8]>::as_ptr",
      "std::ptr::const_ptr::<impl *const [u8]>::len",
      "std::ptr::const_ptr::<impl *const u8>::add",
      "std::ptr::const_ptr::<impl *const u8>::addr",
      "std::ptr::const_ptr::<impl *const u8>::cast::<()>",
      "std::ptr::const_ptr::<impl *const u8>::offset_from_unsigned",
      "std::ptr::drop_in_place::<std::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>>",
      "std::ptr::drop_in_place::<{closure@<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}>",
      "std::ptr::drop_in_place::<{closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}}>",
      "std::ptr::drop_in_place::<{closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}}>",
      "std::ptr::from_raw_parts::<[u8], u8>",
      "std::ptr::metadata::<[u8]>",
      "std::ptr::mut_ptr::<impl *mut *const u8>::cast::<std::ptr::NonNull<u8>>",
      "std::ptr::mut_ptr::<impl *mut *const u8>::cast::<usize>",
      "std::ptr::mut_ptr::<impl *mut u8>::add",
      "std::ptr::mut_ptr::<impl *mut u8>::cast_const",
      "std::ptr::mut_ptr::<impl *mut u8>::offset_from_unsigned",
      "std::ptr::slice_from_raw_parts::<u8>",
      "std::ptr::without_provenance::<u8>",
      "std::ptr::without_provenance_mut::<u8>",
      "std::result::Result::<char, std::char::CharTryFromError>::is_ok",
      "std::rt::panic_fmt",
      "std::slice::Iter::<'_, u8>::new",
      "std::slice::Iter::<'_, u8>::next_back_unchecked",
      "std::slice::Iter::<'_, u8>::pre_dec_end",
      "top_level"
    ]
  },
  {
    "hash": "130593389360887046121730487531425257701",
    "attrs": [
      "#[kanitool::proof]"
    ],
    "name": "verify::standard_proof",
    "file": "tests/proofs/standard_proofs.rs",
    "callees_len": 6,
    "callees": [
      "<u8 as kani::Arbitrary>::any",
      "kani::any::<u8>",
      "kani::any_raw::<u8>",
      "kani::any_raw_internal::<u8>",
      "kani::assert",
      "kani::kani_intrinsic::<u8>"
    ]
  },
  {
    "hash": "14450731345693588624745887593183259349",
    "attrs": [
      "#[kanitool::proof]"
    ],
    "name": "verify::standard_proof_empty",
    "file": "tests/proofs/standard_proofs.rs",
    "callees_len": 0,
    "callees": []
  }
]